stages:
  - build
  - scan

before_script:
#  - docker login -u _json_key -p "$CI_CONTAINER_REGISTRY_TOKEN" https://eu.gcr.io
  - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY

build-master:
  image: docker:stable
  services:
  - docker:dind
  stage: build
  variables:
    DOCKER_HOST: 'tcp://docker:2375'
    DOCKER_DRIVER: 'overlay2'
    IMAGE_TAG: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG
  except:
  - tags
  script:
  - docker build -t $IMAGE_TAG .
  - docker push $IMAGE_TAG

container_scanning:
  stage: scan
  image: docker:stable
  variables:
    DOCKER_HOST: 'tcp://docker:2375'
    DOCKER_DRIVER: 'overlay2'
    IMAGE_TAG: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG
  allow_failure: true
  services:
  - docker:dind
  except:
  - tags
  script:
  - docker run -d --name db arminc/clair-db:latest
  - docker run -p 6060:6060 --link db:postgres -d --name clair --restart on-failure arminc/clair-local-scan:v2.0.1
  - apk add -U wget ca-certificates
  - docker pull ${IMAGE_TAG}
  - wget https://github.com/arminc/clair-scanner/releases/download/v8/clair-scanner_linux_amd64
  - mv clair-scanner_linux_amd64 clair-scanner
  - chmod +x clair-scanner
  - touch clair-whitelist.yml
  - while( ! wget -q -O /dev/null http://docker:6060/v1/namespaces ) ; do sleep 1 ; done
  - retries=0
  - echo "Waiting for clair daemon to start"
  - while( ! wget -T 10 -q -O /dev/null http://docker:6060/v1/namespaces ) ; do sleep 1 ; echo -n "." ; if [ $retries -eq 10 ] ; then echo " Timeout, aborting." ; exit 1 ; fi ; retries=$(($retries+1)) ; done
  - ./clair-scanner -c http://docker:6060 --ip $(hostname -i) -r gl-container-scanning-report.json -l clair.log -w clair-whitelist.yml ${IMAGE_TAG} || true
  artifacts:
    reports:
      container_scanning: gl-container-scanning-report.json

build-tagged:
  stage: build
  image: eu.gcr.io/flownative-beach/beach-phpfpm-did:latest
  only:
    - tags
  script:
  - export MAJOR="$(echo $CI_COMMIT_TAG | cut -d'.' -f1)"
  - export MINOR="$(echo $CI_COMMIT_TAG | cut -d'.' -f2)"

  - docker build -t eu.gcr.io/flownative-beach/${DOCKER_IMAGE_NAME}:build-${CI_JOB_ID} .
  - docker push eu.gcr.io/flownative-beach/${DOCKER_IMAGE_NAME}:build-${CI_JOB_ID}

  - docker tag eu.gcr.io/flownative-beach/${DOCKER_IMAGE_NAME}:build-${CI_JOB_ID} eu.gcr.io/flownative-beach/${DOCKER_IMAGE_NAME}:${CI_COMMIT_TAG}
  - docker push eu.gcr.io/flownative-beach/${DOCKER_IMAGE_NAME}:${CI_COMMIT_TAG}
  - docker tag eu.gcr.io/flownative-beach/${DOCKER_IMAGE_NAME}:build-${CI_JOB_ID} eu.gcr.io/flownative-beach/${DOCKER_IMAGE_NAME}:${MAJOR}
  - docker push eu.gcr.io/flownative-beach/${DOCKER_IMAGE_NAME}:${MAJOR}
  - docker tag eu.gcr.io/flownative-beach/${DOCKER_IMAGE_NAME}:build-${CI_JOB_ID} eu.gcr.io/flownative-beach/${DOCKER_IMAGE_NAME}:${MAJOR}.${MINOR}
  - docker push eu.gcr.io/flownative-beach/${DOCKER_IMAGE_NAME}:${MAJOR}.${MINOR}
  - docker tag eu.gcr.io/flownative-beach/${DOCKER_IMAGE_NAME}:build-${CI_JOB_ID} eu.gcr.io/flownative-beach/${DOCKER_IMAGE_NAME}:latest
  - docker push eu.gcr.io/flownative-beach/${DOCKER_IMAGE_NAME}:latest

  - curl -d content="<b>Docker image base ${CI_COMMIT_REF_NAME} has been released.</b>" https://3.basecamp.com/3923521/integrations/${BASECAMP_CHATBOT_TOKEN}/buckets/6162023/chats/851880111/lines
